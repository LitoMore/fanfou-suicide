{"version":3,"sources":["ff/index.js","app.js","service-worker.js","index.js"],"names":["ff","Fanfou","consumerKey","consumerSecret","apiDomain","oauthDomain","hooks","baseString","str","replace","App","state","loged","user","goAuth","a","getRequestToken","res","localStorage","setItem","oauthTokenSecret","window","location","oauthToken","href","search","this","setState","parsed","queryString","parse","oauth_token","getItem","getAccessToken","removeItem","origin","pathname","get","className","style","width","maxWidth","margin","fontSize","alt","src","profile_image_url","imageRendering","name","type","position","right","bottom","onClick","reload","textAlign","color","fontWeight","marginLeft","target","rel","marginTop","marginBottom","React","Component","Boolean","hostname","match","navigator","serviceWorker","ready","unregister","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.1c10f52a.chunk.js","sourcesContent":["import Fanfou from 'fanfou-sdk-browser';\n\nexport const consumerKey = '7008b986b162eb6ed2db8f50f26bc03e';\nexport const consumerSecret = '0caea751b828756dca59a8ea7330384b';\n\nexport const ff = new Fanfou({\n\tconsumerKey,\n\tconsumerSecret,\n\tapiDomain: 'cors.fanfou.pro',\n\toauthDomain: 'cors.fanfou.pro',\n\thooks: {\n\t\tbaseString: str => str\n\t\t\t.replace('%2F%2Fcors.fanfou.pro%2Foauth', 'http%3A%2F%2Ffanfou.com%2Foauth')\n\t\t\t.replace('%2F%2Fcors.fanfou.pro', 'http%3A%2F%2Fapi.fanfou.com')\n\t}\n});\n","import React from 'react';\nimport queryString from 'query-string';\nimport {ff} from './ff';\nimport 'nes.css/css/nes.css';\nimport './app.css';\n\nclass App extends React.Component {\n\tstate = {\n\t\tloged: false,\n\t\tuser: null\n\t}\n\n\tasync componentDidMount() {\n\t\tconst {location} = window;\n\t\tif (location && location.search) {\n\t\t\tthis.setState({loged: true});\n\t\t\tconst parsed = queryString.parse(location.search);\n\t\t\tconst {oauth_token: oauthToken} = parsed;\n\t\t\tconst oauthTokenSecret = localStorage.getItem('requestTokenSecret');\n\t\t\tif (oauthTokenSecret) {\n\t\t\t\tconst res = await ff.getAccessToken({oauthToken, oauthTokenSecret});\n\t\t\t\tlocalStorage.setItem('oauthToken', res.oauthToken);\n\t\t\t\tlocalStorage.setItem('oauthTokenSecret', res.oauthTokenSecret);\n\t\t\t\tlocalStorage.removeItem('requestTokenSecret');\n\t\t\t\twindow.location.replace(window.location.origin + window.location.pathname);\n\t\t\t}\n\t\t} else {\n\t\t\tconst oauthToken = localStorage.getItem('oauthToken');\n\t\t\tconst oauthTokenSecret = localStorage.getItem('oauthTokenSecret');\n\n\t\t\tif (oauthToken && oauthTokenSecret) {\n\t\t\t\tthis.setState({loged: true});\n\t\t\t\tff.oauthToken = oauthToken;\n\t\t\t\tff.oauthTokenSecret = oauthTokenSecret;\n\t\t\t\tconst user = await ff.get('/users/show');\n\t\t\t\tthis.setState({user});\n\t\t\t}\n\t\t}\n\t}\n\n\tgoAuth = async () => {\n\t\tconst res = await ff.getRequestToken();\n\t\tlocalStorage.setItem('requestTokenSecret', res.oauthTokenSecret);\n\t\twindow.location.replace(`https://fanfou.com/oauth/authorize?oauth_token=${res.oauthToken}&oauth_callback=${window.location.href}`);\n\t}\n\n\trender() {\n\t\tconst {user, loged} = this.state;\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"nes-container with-title is-centered is-dark\" style={{width: '90vw', maxWidth: 800, margin: '40px auto 20px auto'}}>\n\t\t\t\t\t<p className=\"title\" style={{fontSize: 24, margin: '-3rem auto 1rem'}}>自杀</p>\n\n\t\t\t\t\t{user ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t你好，<img className=\"nes-avatar is-small\" alt=\"avatar\" src={user.profile_image_url} style={{imageRendering: 'pixelated'}}/> {user.name}。\n\t\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\tclassName=\"nes-btn is-error\"\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\t\t\tright: 0,\n\t\t\t\t\t\t\t\t\tbottom: 4\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tlocalStorage.removeItem('oauthToken');\n\t\t\t\t\t\t\t\t\tlocalStorage.removeItem('oauthTokenSecret');\n\t\t\t\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t退出\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\tloged ? (\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t正在登录..\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t<button type=\"button\" className=\"nes-btn is-primary\" onClick={this.goAuth}>登录</button>\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t)\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\n\t\t\t\t<p style={{textAlign: 'center', color: 'white'}}>\n\t\t\t\t\t<span style={{fontWeight: 700}}>{'<'}</span>\n\t\t\t\t\t<span style={{fontWeight: 700, marginLeft: 2}}>{'>'}</span>\n\t\t\t\t\t{' without '}\n\t\t\t\t\t<a href=\"https://fanfou.com/lito\" target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t\t\t<i className=\"nes-icon is-small heart nes-pointer is-empty\" style={{marginTop: -4, marginBottom: -4}}/>\n\t\t\t\t\t</a>\n\t\t\t\t\t{' on '}\n\t\t\t\t\t<a href=\"https://github.com/LitoMore/fanfou-export\" target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t\t\t<i className=\"nes-icon github is-small\" style={{marginTop: -4, marginBottom: -4}}/>\n\t\t\t\t\t</a>\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)){3}$/)\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', async () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tawait navigator.serviceWorker.ready;\n\t\t\t\tconsole.log(\n\t\t\t\t\t'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nasync function registerValidSW(swUrl, config) {\n\ttry {\n\t\tconst registration = await navigator.serviceWorker.register(swUrl);\n\t\tregistration.onupdatefound = () => {\n\t\t\tconst installingWorker = registration.installing;\n\t\t\tif (installingWorker === null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t} catch (error) {\n\t\tconsole.error('Error during service worker registration:', error);\n\t}\n}\n\nasync function checkValidServiceWorker(swUrl, config) {\n\ttry {\n\t\t// Check if the service worker can be found. If it can't reload the page.\n\t\tconst response = await fetch(swUrl, {\n\t\t\theaders: {'Service-Worker': 'script'}\n\t\t});\n\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\tconst contentType = response.headers.get('content-type');\n\t\tif (\n\t\t\tresponse.status === 404 ||\n        (contentType !== null && !contentType.includes('javascript'))\n\t\t) {\n\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\tconst registration = await navigator.serviceWorker.ready;\n\t\t\tawait registration.unregister();\n\t\t\twindow.location.reload();\n\t\t} else {\n\t\t\t// Service worker found. Proceed as normal.\n\t\t\tregisterValidSW(swUrl, config);\n\t\t}\n\t} catch {\n\t\tconsole.log(\n\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t);\n\t}\n}\n\nexport async function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tconst registration = await navigator.serviceWorker.ready;\n\t\tregistration.unregister();\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nimport * as serviceWorker from './service-worker';\n\nReactDOM.render(<App/>, document.querySelector('#root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}